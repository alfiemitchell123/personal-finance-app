{
  "version": 3,
  "sources": ["../../../app/routes/budgets.tsx", "../../../app/components/budgets/budgetTitle.tsx", "../../../app/components/budgets/budgetModal.tsx", "../../../app/components/budgets/budgetPercentageBar.tsx", "../../../app/components/budgets/latestSpendingTransaction.tsx", "../../../app/components/budgets/latestSpending.tsx", "../../../app/components/budgets/budgetCard.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/budgets.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/budgets.tsx\");\n  import.meta.hot.lastModified = \"1731514058697.563\";\n}\n// REMIX HMR END\n\nimport { useMemo } from \"react\";\nimport { Box, Divider, Flex, ListItem, Text, UnorderedList } from \"@chakra-ui/react\";\nimport BudgetCard from \"~/components/budgets/budgetCard\";\nimport BudgetsChart from \"~/components/budgets/budgetsChart\";\nimport MainContent from \"~/components/layout/app/mainContent\";\nimport PageHeader from \"~/components/layout/app/pageHeader\";\nimport PageLoading from \"~/components/ui/pageLoading\";\nimport useBudgetsData from \"~/hooks/useBudgets\";\nimport theme from \"~/theme\";\nimport useModal from \"~/hooks/useModal\";\nimport BudgetModal from \"~/components/budgets/budgetModal\";\nimport useTransactionData from \"~/hooks/useTransactions\";\nexport default function BudgetsRoute() {\n  _s();\n  const {\n    budgets,\n    loading: budgetsLoading\n  } = useBudgetsData();\n  const {\n    transactions\n  } = useTransactionData();\n  const {\n    isModalOpen,\n    budgetModalMode,\n    selectedItem,\n    openAddBudgetModal,\n    openEditBudgetModal,\n    openDeleteBudgetModal,\n    closeModal\n  } = useModal();\n  const selectedBudget = budgets?.find(budget => budget.id === selectedItem);\n  const handleEdit = id => {\n    openEditBudgetModal(id);\n  };\n  const handleDelete = id => {\n    openDeleteBudgetModal(id);\n  };\n  const budgetsWithTotals = useMemo(() => {\n    if (!budgets || !transactions) return [];\n    return budgets.map(budget => {\n      const budgetTransactions = transactions.filter(transaction => transaction.transactionCategory === budget.budgetCategory && transaction.transactionAmt < 0);\n      const totalSpent = budgetTransactions.reduce((sum, transaction) => sum + Math.abs(transaction.transactionAmt), 0);\n      const totalRemaining = budget.maxSpend - totalSpent;\n      return {\n        ...budget,\n        totalSpent,\n        totalRemaining,\n        budgetColor: budget.budgetColor\n      };\n    });\n  }, [budgets, transactions]);\n  return <MainContent>\n            {budgetsLoading ? <Flex height=\"100vh\" width=\"100%\" align=\"center\" justify=\"center\">\n                    <PageLoading />\n                </Flex> : <>\n                    <PageHeader openModal={openAddBudgetModal} maxCount={budgets.length} maxCountLabel=\"budgets\">Budgets</PageHeader>\n                    {isModalOpen && <BudgetModal mode={budgetModalMode} isOpen={isModalOpen} onClose={closeModal} budgetId={selectedBudget?.id} existingBudget={selectedBudget} />}\n\n                    <Flex width=\"100%\" direction={{\n        lg: \"row\",\n        sm: \"column\"\n      }} maxW=\"90rem\" align=\"flex-start\" gap={theme.spacing[300]} alignSelf=\"stretch\">\n                        <Flex width={{\n          lg: \"26.75rem\",\n          sm: \"100%\"\n        }} height=\"100%\" padding={theme.spacing[400]} direction={{\n          lg: \"column\",\n          md: \"row\",\n          sm: \"column\"\n        }} align={{\n          lg: \"flex-start\",\n          sm: \"center\"\n        }} gap={theme.spacing[400]} alignSelf=\"stretch\" borderRadius={theme.spacing[150]} bg=\"white\">\n                            <Flex width=\"100%\" justify=\"center\" align=\"center\">\n                                <BudgetsChart budgets={budgetsWithTotals} />\n                            </Flex>\n\n                            <Flex height=\"100%\" direction=\"column\" align=\"flex-start\" gap={theme.spacing[300]} alignSelf=\"stretch\" width=\"100%\">\n                                <Text textStyle=\"preset2\" color=\"grey.900\">\n                                    Spending Summary\n                                </Text>\n                                <UnorderedList m={0} listStyleType=\"none\" display=\"flex\" flexDirection=\"column\" alignItems=\"flex-start\" gap={theme.spacing[200]} alignSelf=\"stretch\">\n                                    {budgetsWithTotals && budgetsWithTotals.length > 0 ? budgetsWithTotals.map((budget, index) => <Flex key={budget.id} width=\"100%\" direction=\"column\" gap={theme.spacing[200]}>\n                                                    <ListItem display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" alignSelf=\"stretch\">\n                                                        <Flex align=\"center\" gap={theme.spacing[200]} flex=\"1 0 0\" alignSelf=\"stretch\">\n                                                            <Box width={theme.spacing[50]} alignSelf=\"stretch\" borderRadius={theme.spacing[100]} bg={budget.budgetColor} />\n                                                            <Text textStyle=\"preset4\" color=\"grey.500\">\n                                                                {budget.budgetCategory}\n                                                            </Text>\n                                                        </Flex>\n                                                        <Flex height=\"1.1875rem\" justify=\"center\" align=\"center\" gap={theme.spacing[100]}>\n                                                            <Text textStyle=\"preset3\" color=\"grey.900\">\n                                                                ${budget.totalSpent.toFixed(2)}\n                                                            </Text>\n                                                            <Text textStyle=\"preset5\" color=\"grey.500\">\n                                                                of ${budget.maxSpend.toFixed(2)}\n                                                            </Text>\n                                                        </Flex>\n                                                    </ListItem>\n                                                    {index < budgetsWithTotals.length - 1 && <Divider orientation=\"horizontal\" height=\"0.0625rem\" />}\n                                                </Flex>) : <Text textStyle=\"preset4\">Add a budget to get started.</Text>}\n                                </UnorderedList>\n                            </Flex>\n                        </Flex>\n                        <Flex direction=\"column\" align=\"flex-start\" gap={theme.spacing[300]} flex=\"1 0 0\" width=\"100%\">\n                            {budgetsWithTotals && budgetsWithTotals.length > 0 ? budgetsWithTotals.map(budget => <BudgetCard key={budget.id} budget={budget} onEdit={handleEdit} onDelete={handleDelete} />) : <Flex width=\"100%\" height=\"50vh\" justify=\"center\" align=\"center\">\n                                    <Text textStyle=\"preset4bold\">Add a budget to get started.</Text>\n                                </Flex>}\n                        </Flex>\n                    </Flex>\n                </>}\n        </MainContent>;\n}\n_s(BudgetsRoute, \"H+Wn/ukn01qjtXJGrldjmPOW1+k=\", false, function () {\n  return [useBudgetsData, useTransactionData, useModal];\n});\n_c = BudgetsRoute;\nvar _c;\n$RefreshReg$(_c, \"BudgetsRoute\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/budgets/budgetTitle.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/budgets/budgetTitle.tsx\");\n  import.meta.hot.lastModified = \"1729933259786.0947\";\n}\n// REMIX HMR END\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { Box, Flex, Text } from \"@chakra-ui/react\";\nimport { DotsThree } from \"phosphor-react\";\nimport EditDeleteDropdown from \"../ui/editDeleteDropdown\";\nimport BudgetModal from \"./budgetModal\";\nimport useModal from \"~/hooks/useModal\";\nimport theme from \"~/theme\";\nconst BudgetTitle = ({\n  fill,\n  budgetCategory,\n  onEdit,\n  onDelete\n}) => {\n  _s();\n  const {\n    isModalOpen,\n    budgetModalMode,\n    selectedItem,\n    openEditBudgetModal,\n    openDeleteBudgetModal,\n    closeModal\n  } = useModal();\n  const [dropdownIsOpen, setDropdownIsOpen] = useState(false);\n  const dropdownRef = useRef(null);\n  const toggleDropdown = event => {\n    event.preventDefault();\n    setDropdownIsOpen(!dropdownIsOpen);\n  };\n  const handleClickOutside = event => {\n    if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n      setDropdownIsOpen(false);\n    }\n  };\n  useEffect(() => {\n    if (dropdownIsOpen) {\n      document.addEventListener(\"mousedown\", handleClickOutside);\n    } else {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    }\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [dropdownIsOpen]);\n  return <Flex justify=\"space-between\" align=\"center\" alignSelf=\"stretch\" width=\"100%\">\n            <Flex width=\"19.75rem\" align=\"center\" gap={theme.spacing[200]}>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n                    <circle cx=\"8\" cy=\"8\" r=\"8\" fill={fill} />\n                </svg>\n                <Text textStyle=\"preset2\" color=\"grey.900\">{budgetCategory}</Text>\n            </Flex>\n\n            <Box position=\"relative\" ref={dropdownRef}>\n                <DotsThree onMouseDown={toggleDropdown} cursor=\"pointer\" />\n                {dropdownIsOpen && <Box width=\"140px\" position=\"absolute\" top=\"100%\" left=\"auto\" transform=\"translateX(-100%)\" zIndex={1}>\n                        <EditDeleteDropdown label=\"Budget\" onEdit={onEdit} onDelete={onDelete} />\n                    </Box>}\n            </Box>\n            {isModalOpen && <BudgetModal mode={budgetModalMode} isOpen={isModalOpen} onClose={closeModal} />}\n        </Flex>;\n};\n_s(BudgetTitle, \"wq6NMp+OW+oHBod2HLFxO4MczIc=\", false, function () {\n  return [useModal];\n});\n_c = BudgetTitle;\nexport default BudgetTitle;\nvar _c;\n$RefreshReg$(_c, \"BudgetTitle\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/budgets/budgetModal.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/budgets/budgetModal.tsx\");\n  import.meta.hot.lastModified = \"1733603633661.9268\";\n}\n// REMIX HMR END\n\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Flex, useToast, FormControl } from \"@chakra-ui/react\";\nimport AddNewModal from \"../ui/addNewModal\";\nimport theme from \"~/theme\";\nimport InputField from \"../ui/inputField\";\nimport { doc, updateDoc, deleteDoc, Timestamp } from \"firebase/firestore\";\nimport { db } from \"~/firebase/firebase\";\nimport DropdownMenu from \"../ui/dropdownMenu\";\nimport { categoryMenuItems, themeMenuItems } from \"~/utils/menuItems\";\nimport useBudgetsData from \"~/hooks/useBudgets\";\nimport { useAuth } from \"~/contexts/authContext/authProvider\";\nimport { Form } from \"@remix-run/react\";\nconst BudgetModal = ({\n  isOpen,\n  onClose,\n  mode,\n  budgetId,\n  existingBudget\n}) => {\n  _s();\n  const [budgetCategory, setBudgetCategory] = useState(\"\");\n  const [maxSpend, setMaxSpend] = useState(0);\n  const [budgetColor, setBudgetColor] = useState(\"\");\n  const [totalSpent, setTotalSpent] = useState(0);\n  const [totalRemaining, setTotalRemaining] = useState(0);\n  const [errors, setErrors] = useState({\n    maxSpend: \"\"\n  });\n  const {\n    budgets: existingBudgets,\n    loading,\n    addBudget\n  } = useBudgetsData();\n  const {\n    user\n  } = useAuth();\n  const toast = useToast();\n\n  // Pre-fill form if in edit mode\n  useEffect(() => {\n    if (!loading && mode === \"edit\" && existingBudget) {\n      setBudgetCategory(existingBudget.budgetCategory || budgetCategory);\n      setMaxSpend(existingBudget.maxSpend || maxSpend);\n      setBudgetColor(existingBudget.budgetColor || budgetColor);\n    }\n  }, [mode, existingBudget, loading]);\n  useEffect(() => {\n    // Get the used categories from the existing budgets\n    const usedCategories = existingBudgets.map(budget => budget.budgetCategory);\n    const usedColors = existingBudgets.map(budget => budget.budgetColor);\n\n    // Filter out used categories from allCategories\n    const availableCategories = categoryMenuItems.map(item => item.value) // Extract the values (e.g., \"Bills\", \"Dining Out\", etc.)\n    .filter(category => !usedCategories.includes(category));\n    const availableColors = themeMenuItems.map(item => item.colorTag).filter(color => !usedColors.includes(color));\n\n    // Pre-select the first available category if there are any\n    if (availableCategories.length > 0) {\n      setBudgetCategory(availableCategories[0]);\n    }\n    if (availableColors.length > 0) {\n      setBudgetColor(availableColors[0]);\n    }\n  }, [existingBudgets]); // Run whenever budgets change\n\n  const validateForm = () => {\n    let valid = true;\n\n    // Initialize newErrors with all required fields\n    let newErrors = {\n      maxSpend: \"\"\n    };\n\n    // Only validate maxSpend; allow default values for category and color\n    if (!maxSpend || maxSpend <= 0) {\n      newErrors.maxSpend = \"Maximum spend must be greater than 0.\";\n      valid = false;\n    }\n    setErrors(newErrors);\n    return valid;\n  };\n  const handleSaveBudget = async () => {\n    if (!validateForm()) return;\n    try {\n      if (mode === \"add\") {\n        // Add new budget to database\n        const newBudget = {\n          budgetCategory: budgetCategory,\n          budgetColor: budgetColor,\n          maxSpend: Number(maxSpend),\n          totalSpent: totalSpent,\n          totalRemaining: maxSpend,\n          createdAt: Timestamp.now()\n        };\n        await addBudget(newBudget);\n        toast({\n          title: \"Budget added successfully.\",\n          status: \"success\",\n          duration: 3000,\n          isClosable: true\n        });\n      } else if (mode === \"edit\" && budgetId) {\n        // Update existing budget\n        if (user) {\n          const budgetDocRef = doc(db, `users/${user.uid}/budgets`, budgetId);\n          await updateDoc(budgetDocRef, {\n            budgetCategory: budgetCategory,\n            budgetColor: budgetColor,\n            maxSpend: maxSpend,\n            totalRemaining: maxSpend\n          });\n          toast({\n            title: \"Budget edited successfully.\",\n            status: \"success\",\n            duration: 3000,\n            isClosable: true\n          });\n        } else {\n          console.error(\"User is not authenticated.\");\n        }\n      }\n\n      // Reset form and close the modal\n      setBudgetCategory(\"\");\n      setMaxSpend(0);\n      setBudgetColor(\"\");\n      setTotalSpent(0);\n      setTotalRemaining(maxSpend);\n      onClose();\n    } catch (error) {\n      console.log(\"Error adding budget: \", error);\n    }\n  };\n  const handleDeleteBudget = async () => {\n    console.log(\"handleDeleteBudget called, mode:\", mode, \"budgetId:\", budgetId);\n    if (mode === \"delete\" && budgetId) {\n      if (user) {\n        // Delete budget\n        const budgetDocRef = doc(db, `users/${user.uid}/budgets`, budgetId);\n        await deleteDoc(budgetDocRef);\n        console.log(\"Budget deleted successfully\");\n        onClose();\n        toast({\n          title: \"Budget deleted successfully.\",\n          status: \"success\",\n          duration: 3000,\n          isClosable: true\n        });\n      } else {\n        console.error(\"User is not authenticated.\");\n      }\n    } else {\n      console.error(\"Delete mode or budgetId is not valid\");\n    }\n  };\n\n  // Extract used colors and categories from existing budgets\n  const usedColors = existingBudgets.map(budget => budget.budgetColor);\n  const usedCategories = existingBudgets.map(budget => budget.budgetCategory);\n  return <AddNewModal isOpen={isOpen} onClose={onClose} headerTitle={mode === \"add\" ? \"Add New Budget\" : mode === \"edit\" ? \"Edit Budget\" : mode === \"delete\" ? \"Delete Budget\" : \"\"} headerTag={mode === \"add\" ? \"Choose a category to set a spending budget. These categories can help you monitor spending.\" : mode === \"edit\" ? \"As your budgets change, feel free to update your spending limits.\" : mode === \"delete\" ? \"Are you sure you want to delete this budget? This action cannot be reversed, and all the data inside it will be removed forever.\" : \"\"}>\n            {(mode === \"add\" || mode === \"edit\") && <Form>\n                    <Flex direction=\"column\" align=\"flex-start\" gap={theme.spacing[200]}>\n                        <FormControl>\n                            <DropdownMenu label=\"Entertainment\" items={categoryMenuItems} fieldTitle=\"Budget Category\" onChange={item => setBudgetCategory(item.value || \"\")} usedCategories={usedCategories} value={budgetCategory} />\n                        </FormControl>\n                        <FormControl isInvalid={!!errors.maxSpend}>\n                            <InputField placeholder=\"e.g. 2000\" type=\"number\" isRequired={true} label=\"Maximum Spend\" prefix=\"$\" onChange={e => setMaxSpend(parseFloat(e.target.value))} value={maxSpend.toString()} helperText={errors.maxSpend} />\n                        </FormControl>\n                        <FormControl>\n                            <DropdownMenu label=\"Green\" items={themeMenuItems} fieldTitle=\"Theme\" colorTag={theme.colors.secondary.green} usedColors={usedColors} usedCategories={usedCategories} onChange={item => setBudgetColor(item.colorTag || \"\")} value={budgetColor} />\n                        </FormControl>\n                    </Flex>\n                </Form>}\n            <Button variant=\"primary\" width=\"100%\" height=\"100%\" padding={theme.spacing[200]} justifyContent=\"center\" alignItems=\"center\" gap={theme.spacing[200]} flex=\"1 0 0\" borderRadius={theme.spacing[100]} textStyle=\"preset4bold\" fontSize=\" 0.875rem\" onClick={() => {\n      console.log(\"Button clicked, mode:\", mode);\n      if (mode === \"add\" || mode === \"edit\") {\n        handleSaveBudget();\n      } else if (mode === \"delete\") {\n        handleDeleteBudget();\n      }\n    }} bg={mode === \"add\" || mode === \"edit\" ? \"grey.900\" : \"secondary.red\"}>\n                {mode === \"add\" ? \"Add Budget\" : mode === \"edit\" ? \"Save Changes\" : mode === \"delete\" ? \"Yes, Confirm Deletion\" : \"\"}\n            </Button>\n\n            {mode === \"delete\" && <Button onClick={onClose} justifyContent=\"center\" alignItems=\"center\" gap={theme.spacing[150]} variant=\"tertiary\" textStyle=\"preset4\" fontSize=\"0.875rem\" color=\"grey.500\" _hover={{\n      color: \"grey.900\"\n    }}>\n                    No, Go Back\n                </Button>}\n        </AddNewModal>;\n};\n_s(BudgetModal, \"D76pD9sJ0027TZHWIq3vqTG5NwE=\", false, function () {\n  return [useBudgetsData, useAuth, useToast];\n});\n_c = BudgetModal;\nexport default BudgetModal;\nvar _c;\n$RefreshReg$(_c, \"BudgetModal\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/budgets/budgetPercentageBar.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/budgets/budgetPercentageBar.tsx\");\n  import.meta.hot.lastModified = \"1729003749030.3735\";\n}\n// REMIX HMR END\n\nimport React from \"react\";\nimport { Box, Flex } from \"@chakra-ui/react\";\nimport theme from \"~/theme\";\nconst BudgetPercentageBar = ({\n  budget\n}) => {\n  const percentageSpent = budget.totalSpent / budget.maxSpend * 100;\n  return <Box width=\"100%\" position=\"relative\">\n            <Flex height={theme.spacing[400]} padding={theme.spacing[50]} align=\"flex-start\" alignSelf=\"stretch\" borderRadius={theme.spacing[50]} bg=\"beige.100\">\n                <Box position=\"absolute\" height={theme.spacing[300]} maxW=\"98.5%\" width={`${percentageSpent}%`} bg={budget.budgetColor} borderRadius={theme.spacing[50]} />\n            </Flex>\n        </Box>;\n};\n_c = BudgetPercentageBar;\nexport default BudgetPercentageBar;\nvar _c;\n$RefreshReg$(_c, \"BudgetPercentageBar\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/budgets/latestSpendingTransaction.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/budgets/latestSpendingTransaction.tsx\");\n  import.meta.hot.lastModified = \"1730110113802.8994\";\n}\n// REMIX HMR END\n\nimport { Flex, Text } from \"@chakra-ui/react\";\nimport theme from \"~/theme\";\nimport React from \"react\";\nimport { Timestamp } from \"firebase/firestore\";\nimport TransactionImg from \"../transactions/transactionImg\";\nconst LatestSpendingTransaction = ({\n  transaction\n}) => {\n  const formatTransactionAmount = amount => {\n    const sign = amount >= 0 ? \"+\" : \"-\";\n    return `${sign}$${Math.abs(amount).toFixed(2)}`;\n  };\n  const formatDate = date => {\n    // Handle Firestore Timestamp or regular JS Date\n    const dateObj = date instanceof Timestamp ? date.toDate() : new Date(date);\n\n    // Make sure the date is valid\n    if (isNaN(dateObj.getTime())) {\n      return \"Invalid date\";\n    }\n    const options = {\n      day: \"numeric\",\n      month: \"short\",\n      year: \"numeric\"\n    };\n    return dateObj.toLocaleDateString('en-UK', options);\n  };\n  return <Flex align=\"center\" gap={theme.spacing[200]} alignSelf=\"stretch\">\n            <Flex align=\"center\" gap={theme.spacing[200]} flex=\"1 0 0\">\n                <TransactionImg transaction={transaction} />\n\n                <Text textStyle=\"preset5bold\" color=\"grey.900\">\n                    {transaction.transactionName}\n                </Text>\n            </Flex>\n            <Flex direction=\"column\" justify=\"center\" align=\"flex-end\" gap={theme.spacing[50]}>\n                <Text textStyle=\"preset5bold\" color=\"grey.900\">\n                    {formatTransactionAmount(transaction.transactionAmt)}\n                </Text>\n                <Text textStyle=\"preset5\" color=\"grey.500\">\n                    {formatDate(transaction.transactionDate)}\n                </Text>\n            </Flex>\n        </Flex>;\n};\n_c = LatestSpendingTransaction;\nexport default LatestSpendingTransaction;\nvar _c;\n$RefreshReg$(_c, \"LatestSpendingTransaction\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/budgets/latestSpending.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/budgets/latestSpending.tsx\");\n  import.meta.hot.lastModified = \"1730109832026.337\";\n}\n// REMIX HMR END\n\nimport { Divider, Flex } from \"@chakra-ui/react\";\nimport SummaryTitle from \"../dashboard/summaryTitle\";\nimport theme from \"~/theme\";\nimport LatestSpendingTransaction from \"./latestSpendingTransaction\";\nimport useTransactionData from \"~/hooks/useTransactions\";\nimport React from \"react\";\nimport PageLoading from \"../ui/pageLoading\";\nconst LatestSpending = ({\n  budget\n}) => {\n  _s();\n  const {\n    transactions,\n    loading\n  } = useTransactionData();\n  if (loading) {\n    return <PageLoading />;\n  }\n  return <Flex padding={theme.spacing[250]} direction=\"column\" justify=\"center\" align=\"flex-start\" gap={theme.spacing[250]} alignSelf=\"stretch\" borderRadius={theme.spacing[150]} bg=\"beige.100\">\n            <SummaryTitle title=\"Latest Spending\" link=\"/transactions\" linkText=\"See All\" titleStyle=\"preset3\" />\n\n            <Flex direction=\"column\" align=\"flex-start\" gap={theme.spacing[150]} alignSelf=\"stretch\">\n                {transactions && transactions.filter(t => t.transactionCategory === budget.budgetCategory && t.transactionAmt < 0).sort((a, b) => b.transactionDate.toDate().getTime() - a.transactionDate.toDate().getTime()).slice(0, 3).map((filteredTransaction, index, filteredArray) => <React.Fragment key={filteredTransaction.id}>\n                                <LatestSpendingTransaction transaction={filteredTransaction} />\n                                {index < filteredArray.length - 1 && <Divider borderColor=\"gray.300\" />}\n                            </React.Fragment>)}\n            </Flex>\n        </Flex>;\n};\n_s(LatestSpending, \"aB29K0VbpdqN1CVpX+HziTBOfHI=\", false, function () {\n  return [useTransactionData];\n});\n_c = LatestSpending;\nexport default LatestSpending;\nvar _c;\n$RefreshReg$(_c, \"LatestSpending\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/budgets/budgetCard.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/budgets/budgetCard.tsx\");\n  import.meta.hot.lastModified = \"1730109867373.7183\";\n}\n// REMIX HMR END\n\nimport { Box, Flex, Text } from \"@chakra-ui/react\";\nimport theme from \"~/theme\";\nimport React from \"react\";\nimport BudgetTitle from \"./budgetTitle\";\nimport BudgetPercentageBar from \"./budgetPercentageBar\";\nimport LatestSpending from \"./latestSpending\";\nimport useTransactionData from \"~/hooks/useTransactions\";\nimport PageLoading from \"../ui/pageLoading\";\nconst BudgetCard = ({\n  budget,\n  onEdit,\n  onDelete\n}) => {\n  _s();\n  const {\n    transactions,\n    loading\n  } = useTransactionData();\n  if (loading) {\n    return <PageLoading />;\n  }\n  return <Flex padding={theme.spacing[400]} direction=\"column\" align=\"flex-start\" gap={theme.spacing[250]} alignSelf=\"stretch\" borderRadius={theme.spacing[150]} bg=\"white\">\n            <BudgetTitle fill={budget.budgetColor} budgetCategory={budget.budgetCategory} onEdit={() => onEdit(budget.id)} onDelete={() => onDelete(budget.id)} />\n\n            <Flex direction=\"column\" align=\"flex-start\" gap={theme.spacing[200]} alignSelf=\"stretch\">\n                <Flex align=\"center\" gap={theme.spacing[200]} alignSelf=\"stretch\">\n                    <Text textStyle=\"preset4\" color=\"grey.500\">Maximum of ${budget.maxSpend.toFixed(2)}</Text>\n                </Flex>\n\n                <BudgetPercentageBar budget={budget} />\n\n                <Flex justify=\"space-between\" align=\"flex-start\" gap={theme.spacing[200]} alignSelf=\"stretch\">\n                    <Flex align=\"center\" gap={theme.spacing[200]} flex=\"1\">\n                        <Box width={theme.spacing[50]} alignSelf=\"stretch\" borderRadius={theme.spacing[100]} bg={budget.budgetColor} />\n                        <Flex direction=\"column\" gap={theme.spacing[50]}>\n                            <Text textStyle=\"preset5\" color=\"grey.500\">\n                                Spent\n                            </Text>\n                            <Text textStyle=\"preset4bold\" color=\"grey.900\">\n                                ${budget.totalSpent.toFixed(2)}\n                            </Text>\n                        </Flex>\n                    </Flex>\n\n                    <Flex align=\"center\" gap={theme.spacing[200]} flex=\"1\">\n                        <Box width={theme.spacing[50]} alignSelf=\"stretch\" borderRadius={theme.spacing[100]} bg=\"beige.100\" />\n                        <Flex direction=\"column\" gap={theme.spacing[50]}>\n                            <Text textStyle=\"preset5\" color=\"grey.500\">\n                                Remaining\n                            </Text>\n                            <Text textStyle=\"preset4bold\" color=\"grey.900\">\n                                ${budget.totalRemaining.toFixed(2)}\n                            </Text>\n                        </Flex>\n                    </Flex>\n                </Flex>\n                {transactions && transactions.filter(t => t.transactionCategory === budget.budgetCategory && t.transactionAmt < 0).length > 0 && <LatestSpending budget={budget} />}\n            </Flex>\n        </Flex>;\n};\n_s(BudgetCard, \"aB29K0VbpdqN1CVpX+HziTBOfHI=\", false, function () {\n  return [useTransactionData];\n});\n_c = BudgetCard;\nexport default BudgetCard;\nvar _c;\n$RefreshReg$(_c, \"BudgetCard\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_react", "import_react", "usedCategories", "usedColors", "import_jsx_dev_runtime", "_s", "_c", "import_jsx_dev_runtime", "_c", "import_jsx_dev_runtime", "_c", "import_react", "import_jsx_dev_runtime", "_s", "React", "_c", "import_jsx_dev_runtime", "_s", "_c", "import_jsx_dev_runtime", "_s", "_c"]
}
