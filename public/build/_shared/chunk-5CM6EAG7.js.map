{
  "version": 3,
  "sources": ["../../../app/components/transactions/transactionModal.tsx", "../../../app/components/transactions/transactionsListItem.tsx", "../../../app/components/transactions/transactionsList.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/transactions/transactionModal.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/transactions/transactionModal.tsx\");\n  import.meta.hot.lastModified = \"1733615785658.5164\";\n}\n// REMIX HMR END\n\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Checkbox, Flex, FormControl, useToast } from \"@chakra-ui/react\";\nimport AddNewModal from \"../ui/addNewModal\";\nimport theme from \"~/theme\";\nimport InputField from \"../ui/inputField\";\nimport { doc, updateDoc, deleteDoc, Timestamp } from \"firebase/firestore\";\nimport { db } from \"~/firebase/firebase\";\nimport DropdownMenu from \"../ui/dropdownMenu\";\nimport { categoryMenuItems } from \"~/utils/menuItems\";\nimport { useAuth } from \"~/contexts/authContext/authProvider\";\nimport useTransactionData from \"~/hooks/useTransactions\";\nimport { Form } from \"@remix-run/react\";\nconst TransactionModal = ({\n  isOpen,\n  onClose,\n  mode,\n  transactionId,\n  existingTransaction\n}) => {\n  _s();\n  const [transactionName, setTransactionName] = useState(\"\");\n  const [transactionCategory, setTransactionCategory] = useState(\"\");\n  const [transactionAmt, setTransactionAmt] = useState(0);\n  const [recurringBill, setRecurringBill] = useState(false);\n  const [loadingTransactions, setLoadingTransactions] = useState(true);\n  const [errors, setErrors] = useState({\n    transactionName: \"\",\n    transactionAmt: \"\"\n  });\n  const {\n    transactions: existingTransactions,\n    addTransaction\n  } = useTransactionData();\n  const {\n    user\n  } = useAuth();\n  const toast = useToast();\n  const validateForm = () => {\n    let valid = true;\n\n    // Initialize newErrors with all required fields\n    let newErrors = {\n      transactionName: \"\",\n      transactionAmt: \"\"\n    };\n    if (!transactionName || transactionName === \"\" || transactionName === \"e.g. Property Management Inc\") {\n      newErrors.transactionName = \"Transaction must have a name.\";\n      valid = false;\n    }\n    if (!transactionAmt || transactionAmt <= 0) {\n      newErrors.transactionAmt = \"Transaction amount must be greater than 0.\";\n      valid = false;\n    }\n    setErrors(newErrors);\n    return valid;\n  };\n\n  // Pre-fill form if in edit mode\n  useEffect(() => {\n    if (mode === \"edit\" && existingTransaction) {\n      setLoadingTransactions(true);\n      setTransactionName(existingTransaction.transactionName || transactionName);\n      setTransactionCategory(existingTransaction.transactionCategory || transactionCategory);\n      setTransactionAmt(existingTransaction.transactionAmt || transactionAmt);\n      setRecurringBill(existingTransaction.recurringBill || recurringBill);\n      setLoadingTransactions(false);\n    }\n  }, [mode, existingTransaction]);\n  const handleCheckboxChange = e => {\n    setRecurringBill(e.target.checked);\n  };\n  const handleSaveTransaction = async () => {\n    if (!validateForm()) return;\n    try {\n      if (mode === \"add\") {\n        // Add new transaction to database\n        const newTransaction = {\n          transactionName: transactionName,\n          transactionCategory: transactionCategory,\n          transactionAmt: Number(transactionAmt),\n          recurringBill: recurringBill,\n          transactionDate: Timestamp.now()\n        };\n        await addTransaction(newTransaction);\n        toast({\n          title: \"Transaction added successfully.\",\n          status: \"success\",\n          duration: 3000,\n          isClosable: true\n        });\n      } else if (mode === \"edit\" && transactionId) {\n        // Update existing transaction\n        if (user) {\n          const transactionDocRef = doc(db, `users/${user.uid}/transactions`, transactionId);\n          await updateDoc(transactionDocRef, {\n            transactionName: transactionName,\n            transactionCategory: transactionCategory,\n            transactionAmt: Number(transactionAmt),\n            recurringBill: recurringBill\n          });\n          toast({\n            title: \"Transaction edited successfully.\",\n            status: \"success\",\n            duration: 3000,\n            isClosable: true\n          });\n        } else {\n          console.error(\"User is not authenticated.\");\n        }\n      }\n\n      // Reset form and close the modal\n      setTransactionName(\"\");\n      setTransactionCategory(\"\");\n      setTransactionAmt(0);\n      setRecurringBill(false);\n      onClose();\n    } catch (error) {\n      console.log(\"Error adding transaction: \", error);\n    }\n  };\n  const handleDeleteTransaction = async () => {\n    console.log(\"handleDeleteTransaction called, mode:\", mode, \"transactionId:\", transactionId);\n    if (mode === \"delete\" && transactionId) {\n      if (user) {\n        // Delete transaction\n        const transactionDocRef = doc(db, `users/${user.uid}/transactions`, transactionId);\n        await deleteDoc(transactionDocRef);\n        onClose();\n        toast({\n          title: \"Transaction deleted successfully.\",\n          status: \"success\",\n          duration: 3000,\n          isClosable: true\n        });\n      } else {\n        console.error(\"User is not authenticated.\");\n      }\n    } else {\n      console.error(\"Delete mode or transactionId is not valid\");\n    }\n  };\n  return <AddNewModal isOpen={isOpen} onClose={onClose} headerTitle={mode === \"add\" ? \"Add New Transaction\" : mode === \"edit\" ? \"Edit Transaction\" : mode === \"delete\" ? \"Delete Transaction\" : \"\"} headerTag={mode === \"add\" ? \"Enter a name for the transaction and pick a category. These categories can help you monitor income and expenses.\" : mode === \"edit\" ? \"If you missed something or entered an amount incorrectly, edit it and save changes.\" : mode === \"delete\" ? \"Are you sure you want to delete this transaction? This action cannot be reversed, and all the data inside it will be removed forever.\" : \"\"}>\n            {(mode === \"add\" || mode === \"edit\") && <Form>\n                    <Flex direction=\"column\" align=\"flex-start\" gap={theme.spacing[200]}>\n                        <FormControl isInvalid={!!errors.transactionName}>\n                            <InputField label=\"Transaction Name\" placeholder=\"e.g. Property Management Inc\" type=\"text\" isRequired={true} onChange={e => setTransactionName(e.target.value)} value={transactionName} helperText={errors.transactionName} />\n                        </FormControl>\n                        <DropdownMenu label=\"Bills\" items={categoryMenuItems} fieldTitle=\"Transaction Category\" onChange={item => setTransactionCategory(item.value || \"\")} value={transactionCategory} />\n                        <FormControl isInvalid={!!errors.transactionAmt}>\n                            <InputField placeholder=\"e.g. 2000\" type=\"number\" isRequired={true} label=\"Transaction Amount\" prefix=\"$\" onChange={e => setTransactionAmt(parseFloat(e.target.value))} value={transactionAmt} helperText={errors.transactionAmt} />\n                        </FormControl>\n                        <Checkbox variant=\"outline\" type=\"checkbox\" onChange={handleCheckboxChange} isChecked={recurringBill} iconColor=\"white\" colorScheme=\"grey\" sx={{\n          \".chakra-checkbox__label\": {\n            color: \"grey.500\",\n            textStyle: \"preset5bold\"\n          }\n        }}>\n                            Recurring Bill\n                        </Checkbox>\n                    </Flex>\n                </Form>}\n            <Button variant=\"primary\" width=\"100%\" height=\"100%\" padding={theme.spacing[200]} justifyContent=\"center\" alignItems=\"center\" gap={theme.spacing[200]} flex=\"1 0 0\" borderRadius={theme.spacing[100]} textStyle=\"preset4bold\" fontSize=\" 0.875rem\" onClick={() => {\n      console.log(\"Button clicked, mode:\", mode);\n      if (mode === \"add\" || mode === \"edit\") {\n        handleSaveTransaction();\n      } else if (mode === \"delete\") {\n        handleDeleteTransaction();\n      }\n    }} bg={mode === \"add\" || mode === \"edit\" ? \"grey.900\" : \"secondary.red\"}>\n                {mode === \"add\" ? \"Add Transaction\" : mode === \"edit\" ? \"Save Changes\" : mode === \"delete\" ? \"Yes, Confirm Deletion\" : \"\"}\n            </Button>\n\n            {mode === \"delete\" && <Button onClick={onClose} justifyContent=\"center\" alignItems=\"center\" gap={theme.spacing[150]} variant=\"tertiary\" textStyle=\"preset4\" fontSize=\"0.875rem\" color=\"grey.500\" _hover={{\n      color: \"grey.900\"\n    }}>\n                    No, Go Back\n                </Button>}\n        </AddNewModal>;\n};\n_s(TransactionModal, \"slrGtkFyHDXguA4D291nf/pgUvw=\", false, function () {\n  return [useTransactionData, useAuth, useToast];\n});\n_c = TransactionModal;\nexport default TransactionModal;\nvar _c;\n$RefreshReg$(_c, \"TransactionModal\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/transactions/transactionsListItem.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/transactions/transactionsListItem.tsx\");\n  import.meta.hot.lastModified = \"1731514058692.2773\";\n}\n// REMIX HMR END\n\nimport React from \"react\";\nimport { Box, Flex, IconButton, Text } from \"@chakra-ui/react\";\nimport TransactionImg from \"./transactionImg\";\nimport { useLocation } from \"@remix-run/react\";\nimport theme from \"~/theme\";\nimport { PencilSimple, Trash } from \"phosphor-react\";\nimport { Timestamp } from \"firebase/firestore\";\nconst TransactionsListItem = ({\n  transaction,\n  onEdit,\n  onDelete\n}) => {\n  _s();\n  const location = useLocation();\n  const formatTransactionAmount = amount => {\n    const sign = amount >= 0 ? \"+\" : \"-\";\n    return `${sign}$${Math.abs(amount).toFixed(2)}`;\n  };\n  const formatDate = date => {\n    const dateObj = date instanceof Timestamp ? date.toDate() : date;\n    const options = {\n      day: \"numeric\",\n      month: \"short\",\n      year: \"numeric\"\n    };\n    return new Date(dateObj).toLocaleDateString('en-UK', options);\n  };\n\n  // style it depending on whether it's the overview transactions summary or on the main transaction page\n  const locationTransactionRoute = location.pathname === \"/transactions\";\n  return <Box width=\"100%\" position=\"relative\" _hover={{\n    \".action-buttons\": {\n      opacity: 1\n    }\n  }}>\n            {/* Desktop view */}\n            <Flex display={{\n      lg: \"flex\",\n      md: \"flex\",\n      sm: \"none\"\n    }} justify={locationTransactionRoute ? \"normal\" : \"space-between\"} align=\"center\" width=\"100%\" key={`${transaction.id}-desktop`} padding={locationTransactionRoute ? `0rem ${theme.spacing[150]}` : \"none\"} gap={locationTransactionRoute ? theme.spacing[400] : \"none\"}>\n                <Flex align=\"center\" gap={theme.spacing[200]} flex=\"1\">\n                    <TransactionImg transaction={transaction} />\n                    <Text textStyle=\"preset4bold\">{transaction.transactionName}</Text>\n                </Flex>\n\n                {locationTransactionRoute && <Flex width=\"7.5rem\" direction=\"column\" justify=\"center\" align=\"flex-start\">\n                        <Text textStyle=\"preset5\" color=\"grey.500\">{transaction.transactionCategory}</Text>\n                    </Flex>}\n\n                {locationTransactionRoute && <Flex width=\"7.5rem\" direction=\"column\" justify=\"center\" align=\"flex-start\">\n                        <Text textStyle=\"preset5\" color=\"grey.500\">{formatDate(transaction.transactionDate)}</Text>\n                    </Flex>}\n\n                {locationTransactionRoute && <Flex width=\"12.5rem\" direction=\"column\" justify=\"center\" align=\"flex-end\">\n                        <Text textStyle=\"preset4bold\" color={transaction.transactionAmt >= 0 ? \"secondary.green\" : \"black\"} textAlign=\"right\">\n                            {formatTransactionAmount(transaction.transactionAmt)}\n                        </Text>\n                    </Flex>}\n\n                {!locationTransactionRoute && <Flex direction=\"column\" justify=\"center\" align=\"flex-end\" gap={theme.spacing[100]}>\n                        <Text textStyle=\"preset4bold\" color={transaction.transactionAmt >= 0 ? \"secondary.green\" : \"black\"} textAlign=\"right\">\n                            {formatTransactionAmount(transaction.transactionAmt)}\n                        </Text>\n\n                        <Text textStyle=\"preset5\" color=\"grey.500\">\n                            {formatDate(transaction.transactionDate)}\n                        </Text>\n                    </Flex>}\n                {locationTransactionRoute && <Flex padding={theme.spacing[100]} position=\"absolute\" right={theme.spacing[100]} top=\"50%\" transform=\"translateY(-50%)\" className=\"action-buttons\" opacity=\"0\" transition=\"opacity 0.2s\" gap={theme.spacing[100]} bg=\"white\" boxShadow=\"0px 2px 6px rgba(0, 0, 0, 0.25)\" borderRadius={theme.spacing[200]}>\n                        <IconButton aria-label=\"Edit transaction\" icon={<PencilSimple />} onClick={() => onEdit(transaction.id)} size=\"sm\" variant=\"ghost\" borderRadius={theme.spacing[200]} />\n                        <IconButton aria-label=\"Delete transaction\" icon={<Trash />} onClick={() => onDelete(transaction.id)} size=\"sm\" variant=\"ghost\" borderRadius={theme.spacing[200]} />\n                    </Flex>}\n            </Flex>\n\n            {/* Mobile view */}\n            <Flex mt={theme.spacing[100]} display={{\n      lg: \"none\",\n      md: \"none\",\n      sm: \"flex\"\n    }} justify={locationTransactionRoute ? \"normal\" : \"space-between\"} align=\"center\" width=\"100%\" key={`${transaction.id}-mobile`} padding={locationTransactionRoute ? `0rem ${theme.spacing[150]}` : \"none\"} gap={locationTransactionRoute ? theme.spacing[400] : \"none\"}>\n                <Flex align=\"center\" gap={theme.spacing[200]} flex=\"1\">\n                    <TransactionImg transaction={transaction} />\n\n                    <Flex direction=\"column\" justify=\"center\" align=\"flex-start\" gap={theme.spacing[100]} alignSelf=\"stretch\">\n                        <Text textStyle=\"preset4bold\">{transaction.transactionName}</Text>\n                        <Text textStyle=\"preset5\" color=\"grey.500\">{transaction.transactionCategory}</Text>\n                    </Flex>\n                </Flex>\n\n                <Flex direction=\"column\" justify=\"center\" align=\"flex-end\" gap={theme.spacing[50]}>\n                    <Text textStyle=\"preset4bold\" color={transaction.transactionAmt >= 0 ? \"secondary.green\" : \"black\"} textAlign=\"right\">\n                        {formatTransactionAmount(transaction.transactionAmt)}\n                    </Text>\n                    <Text textStyle=\"preset5\" color=\"grey.500\">{formatDate(transaction.transactionDate)}</Text>\n                </Flex>\n            </Flex>\n        </Box>;\n};\n_s(TransactionsListItem, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = TransactionsListItem;\nexport default TransactionsListItem;\nvar _c;\n$RefreshReg$(_c, \"TransactionsListItem\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/transactions/transactionsList.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/transactions/transactionsList.tsx\");\n  import.meta.hot.lastModified = \"1731082058712.9736\";\n}\n// REMIX HMR END\n\nimport { Divider, Flex } from \"@chakra-ui/react\";\nimport theme from \"~/theme\";\nimport TransactionsListItem from \"./transactionsListItem\";\nimport useModal from \"~/hooks/useModal\";\nimport TransactionModal from \"./transactionModal\";\nconst TransactionsList = ({\n  limit,\n  transactions = []\n}) => {\n  _s();\n  const {\n    isModalOpen,\n    transactionModalMode,\n    openEditTransactionModal,\n    openDeleteTransactionModal,\n    closeModal,\n    selectedItem\n  } = useModal();\n  const selectedTransaction = transactions?.find(transaction => transaction.id === selectedItem);\n\n  // Limit transactions to the specified amount\n  const displayedTransactions = limit ? transactions?.slice(0, limit) : transactions || [];\n  const handleEdit = id => {\n    openEditTransactionModal(id);\n  };\n  const handleDelete = id => {\n    openDeleteTransactionModal(id);\n  };\n  return <Flex direction=\"column\" align=\"flex-start\" gap={theme.spacing[250]} width=\"100%\">\n            {displayedTransactions.map((transaction, index) => <Flex key={transaction.id} width=\"100%\" direction=\"column\" gap={theme.spacing[250]}>\n                    <TransactionsListItem transaction={transaction} onEdit={handleEdit} onDelete={handleDelete} />\n                    {index < displayedTransactions.length - 1 && <Divider orientation=\"horizontal\" />}\n                </Flex>)}\n            {isModalOpen && <TransactionModal mode={transactionModalMode} isOpen={isModalOpen} onClose={closeModal} transactionId={selectedTransaction?.id} existingTransaction={selectedTransaction} />}\n        </Flex>;\n};\n_s(TransactionsList, \"XYMqOq9dgb+HZt64BTrrSfKcdEw=\", false, function () {\n  return [useModal];\n});\n_c = TransactionsList;\nexport default TransactionsList;\nvar _c;\n$RefreshReg$(_c, \"TransactionsList\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_jsx_dev_runtime", "_s", "_c", "import_jsx_dev_runtime", "_s", "_c"]
}
