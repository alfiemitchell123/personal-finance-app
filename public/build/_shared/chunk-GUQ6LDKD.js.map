{
  "version": 3,
  "sources": ["../../../app/hooks/useTransactions.ts", "../../../app/components/transactions/transactionImg.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app/hooks/useTransactions.ts\"\n);\nimport.meta.hot.lastModified = \"1733603633456.173\";\n}\n// REMIX HMR END\n\nimport { useEffect, useState } from \"react\";\nimport { addDoc, collection, getDocs, onSnapshot } from \"firebase/firestore\";\nimport { db } from \"~/firebase/firebase\";\nimport { Transaction } from \"~/types\";\nimport { useAuth } from \"~/contexts/authContext/authProvider\";\n\nconst useTransactionData = () => {\n    const { user } = useAuth();\n    const [transactions, setTransactions] = useState<Transaction[]>([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState<string | null>(null);\n\n    // Fetch transactions data\n    useEffect(() => {\n        const fetchTransactions = async () => {\n            if (user) {\n                try {\n                    const transactionsRef = collection(db, `users/${user.uid}/transactions`);\n                    const querySnapshot = await getDocs(transactionsRef);\n\n                    const transactionsData: Transaction[] = [];\n                    querySnapshot.forEach((doc) => {\n                        transactionsData.push({ id: doc.id, ...doc.data() } as Transaction);\n                    });\n\n                    setTransactions(transactionsData);\n                } catch {\n                    setError(\"Error fetching transactions data\");\n                } finally {\n                    setLoading(false);\n                }\n            }\n        };\n\n        fetchTransactions();\n    }, [user]);\n\n    // Listener for transactions\n    useEffect(() => {\n        if (!user) return; // Ensure user is authenticated\n\n        const transactionCollection = collection(db, `users/${user.uid}/transactions`);\n\n        const unsubscribe = onSnapshot(transactionCollection, (snapshot) => {\n            const transactionsData: Transaction[] = snapshot.docs.map(doc => ({\n                id: doc.id,\n                ...doc.data(),\n            })) as Transaction[];\n\n            const sortedTransactions = transactionsData.sort((a, b) => {\n                const dateA = a.transactionDate.toMillis();\n                const dateB = b.transactionDate.toMillis();\n                return dateB - dateA;\n            });\n\n            setTransactions(sortedTransactions);\n        }, (error) => {\n            setError(\"Error fetching budgets\");\n            console.log(error);\n        });\n\n        // Cleanup function to unsubscribe\n        return () => unsubscribe();\n    }, [user]);\n\n    // Add a new budget\n    const addTransaction = async (newTransaction: Omit<Transaction, 'id'>) => {\n        try {\n            const transactionCollection = collection(db, `users/${user?.uid}/transactions`);\n            const docRef = await addDoc(transactionCollection, { ...newTransaction, userId: user?.uid });\n            const addedTransaction = { id: docRef.id, ...newTransaction };\n            setTransactions((prevTransactions) => [addedTransaction, ...prevTransactions]);\n        } catch (err) {\n            setError(\"Error adding transaction\");\n            console.log(err);\n        }\n    };\n\n    return { transactions, loading, error, addTransaction };\n}\n\nexport default useTransactionData;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/transactions/transactionImg.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/transactions/transactionImg.tsx\");\n  import.meta.hot.lastModified = \"1730110672945.124\";\n}\n// REMIX HMR END\n\nimport { Box, Image } from \"@chakra-ui/react\";\nconst storageBaseURL = \"https://firebasestorage.googleapis.com/v0/b/personal-finance-app-f7b63.appspot.com/o/transactionCategoryImages%2F\";\nconst formatCategoryToImageUrl = category => {\n  // Format the category to match storage format\n  const formattedCategory = category.replace(/\\s+/g, \"\").toLowerCase() + \".jpg\";\n  return `${storageBaseURL}${formattedCategory}?alt=media`; // Append URL params as needed\n};\nconst TransactionImg = ({\n  transaction\n}) => {\n  const imageUrl = transaction.transactionImg || formatCategoryToImageUrl(transaction.transactionCategory);\n  return <Box>\n            <Image src={imageUrl} alt={`${transaction.transactionCategory} Image`} boxSize=\"2.5rem\" objectFit=\"cover\" borderRadius=\"full\" fallbackSrc=\"assets/urban-services-hub.jpg\" />\n        </Box>;\n};\n_c = TransactionImg;\nexport default TransactionImg;\nvar _c;\n$RefreshReg$(_c, \"TransactionImg\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;AAWA,mBAAoC;AATpC,IAAI,aAAa;AACjB,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EACA;AACA,cAAY,IAAI,eAAe;AAC/B;AASA,IAAM,qBAAqB,MAAM;AAC7B,QAAM,EAAE,KAAK,IAAI,QAAQ;AACzB,QAAM,CAAC,cAAc,eAAe,QAAI,uBAAwB,CAAC,CAAC;AAClE,QAAM,CAAC,SAAS,UAAU,QAAI,uBAAS,IAAI;AAC3C,QAAM,CAAC,OAAO,QAAQ,QAAI,uBAAwB,IAAI;AAGtD,8BAAU,MAAM;AACZ,UAAM,oBAAoB,YAAY;AAClC,UAAI,MAAM;AACN,YAAI;AACA,gBAAM,kBAAkB,WAAW,IAAI,SAAS,KAAK,kBAAkB;AACvE,gBAAM,gBAAgB,MAAM,QAAQ,eAAe;AAEnD,gBAAM,mBAAkC,CAAC;AACzC,wBAAc,QAAQ,CAAC,QAAQ;AAC3B,6BAAiB,KAAK,EAAE,IAAI,IAAI,IAAI,GAAG,IAAI,KAAK,EAAE,CAAgB;AAAA,UACtE,CAAC;AAED,0BAAgB,gBAAgB;AAAA,QACpC,QAAE;AACE,mBAAS,kCAAkC;AAAA,QAC/C,UAAE;AACE,qBAAW,KAAK;AAAA,QACpB;AAAA,MACJ;AAAA,IACJ;AAEA,sBAAkB;AAAA,EACtB,GAAG,CAAC,IAAI,CAAC;AAGT,8BAAU,MAAM;AACZ,QAAI,CAAC;AAAM;AAEX,UAAM,wBAAwB,WAAW,IAAI,SAAS,KAAK,kBAAkB;AAE7E,UAAM,cAAc,WAAW,uBAAuB,CAAC,aAAa;AAChE,YAAM,mBAAkC,SAAS,KAAK,IAAI,UAAQ;AAAA,QAC9D,IAAI,IAAI;AAAA,QACR,GAAG,IAAI,KAAK;AAAA,MAChB,EAAE;AAEF,YAAM,qBAAqB,iBAAiB,KAAK,CAAC,GAAG,MAAM;AACvD,cAAM,QAAQ,EAAE,gBAAgB,SAAS;AACzC,cAAM,QAAQ,EAAE,gBAAgB,SAAS;AACzC,eAAO,QAAQ;AAAA,MACnB,CAAC;AAED,sBAAgB,kBAAkB;AAAA,IACtC,GAAG,CAACA,WAAU;AACV,eAAS,wBAAwB;AACjC,cAAQ,IAAIA,MAAK;AAAA,IACrB,CAAC;AAGD,WAAO,MAAM,YAAY;AAAA,EAC7B,GAAG,CAAC,IAAI,CAAC;AAGT,QAAM,iBAAiB,OAAO,mBAA4C;AACtE,QAAI;AACA,YAAM,wBAAwB,WAAW,IAAI,SAAS,MAAM,kBAAkB;AAC9E,YAAM,SAAS,MAAM,OAAO,uBAAuB,EAAE,GAAG,gBAAgB,QAAQ,MAAM,IAAI,CAAC;AAC3F,YAAM,mBAAmB,EAAE,IAAI,OAAO,IAAI,GAAG,eAAe;AAC5D,sBAAgB,CAAC,qBAAqB,CAAC,kBAAkB,GAAG,gBAAgB,CAAC;AAAA,IACjF,SAAS,KAAP;AACE,eAAS,0BAA0B;AACnC,cAAQ,IAAI,GAAG;AAAA,IACnB;AAAA,EACJ;AAEA,SAAO,EAAE,cAAc,SAAS,OAAO,eAAe;AAC1D;AAEA,IAAO,0BAAQ;;;AC5DH;AA/BZ,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,qDAAuD,EAAE;AAAA,EAClG;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAON,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAgD;AAChD,cAAY,IAAI,eAAe;AACjC;AAIA,IAAM,iBAAiB;AACvB,IAAM,2BAA2B,cAAY;AAE3C,QAAM,oBAAoB,SAAS,QAAQ,QAAQ,EAAE,EAAE,YAAY,IAAI;AACvE,SAAO,GAAG,iBAAiB;AAC7B;AACA,IAAM,iBAAiB,CAAC;AAAA,EACtB;AACF,MAAM;AACJ,QAAM,WAAW,YAAY,kBAAkB,yBAAyB,YAAY,mBAAmB;AACvG,SAAO,mDAAC,OACE,6DAAC,SAAM,KAAK,UAAU,KAAK,GAAG,YAAY,6BAA6B,SAAQ,UAAS,WAAU,SAAQ,cAAa,QAAO,aAAY,mCAA1I;AAAA;AAAA;AAAA;AAAA,SAA0K,KAD7K;AAAA;AAAA;AAAA;AAAA,SAED;AACR;AACA,KAAK;AACL,IAAO,yBAAQ;AACf,IAAI;AACJ,aAAa,IAAI,gBAAgB;AAEjC,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": ["error"]
}
