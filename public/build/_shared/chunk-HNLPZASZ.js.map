{
  "version": 3,
  "sources": ["../../../app/hooks/usePots.ts"],
  "sourcesContent": ["// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app/hooks/usePots.ts\"\n);\nimport.meta.hot.lastModified = \"1733603633571.334\";\n}\n// REMIX HMR END\n\nimport { useEffect, useState } from \"react\";\nimport { collection, getDocs, query, orderBy, onSnapshot, addDoc } from \"firebase/firestore\";\nimport { db } from \"~/firebase/firebase\";\nimport { Pot } from \"~/types\";\nimport { useAuth } from \"~/contexts/authContext/authProvider\";\n\nconst usePotsData = () => {\n    const { user } = useAuth();\n    const [pots, setPots] = useState<Pot[]>([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState<string | null>(null);\n\n    // Fetch pots data\n    useEffect(() => {\n        const fetchPots = async () => {\n            if (user) {\n                try {\n                    const potsRef = collection(db, `users/${user.uid}/pots`);\n                    const querySnapshot = await getDocs(potsRef);\n\n                    const potsData: Pot[] = [];\n                    querySnapshot.forEach((doc) => {\n                        potsData.push({ id: doc.id, ...doc.data() } as Pot);\n                    });\n\n                    setPots(potsData);\n                } catch {\n                    setError(\"Error fetching pots data\");\n                } finally {\n                    setLoading(false);\n                }\n            }\n        };\n\n        fetchPots();\n    }, [user]);\n\n    // Listener for pots\n    useEffect(() => {\n        if (!user) return; // Ensure user is authenticated\n\n        const potCollection = collection(db, `users/${user.uid}/pots`);\n\n        const unsubscribe = onSnapshot(potCollection, (snapshot) => {\n            const potsData: Pot[] = snapshot.docs.map(doc => ({\n                id: doc.id,\n                ...doc.data(),\n            })) as Pot[];\n\n            const sortedPots = potsData.sort((a, b) => {\n                const dateA = a.createdAt.toMillis(); // Convert Firestore Timestamp to milliseconds\n                const dateB = b.createdAt.toMillis();\n                return dateA - dateB; // Sort in descending order\n            });\n\n            setPots(sortedPots);\n        }, (error) => {\n            setError(\"Error fetching pots\");\n            console.log(error);\n        });\n\n        // Cleanup function to unsubscribe\n        return () => unsubscribe();\n    }, [user]);\n\n    // Add a new budget\n    const addPot = async (newPot: Omit<Pot, 'id'>) => {\n        try {\n            const potCollection = collection(db, `users/${user?.uid}/pots`);\n            const docRef = await addDoc(potCollection, { ...newPot, userId: user?.uid });\n            const addedPot = { id: docRef.id, ...newPot };\n            setPots((prevPot) => [addedPot, ...prevPot]);\n        } catch (err) {\n            setError(\"Error adding pot\");\n            console.log(err);\n        }\n    };\n\n    return { pots, loading, error, addPot };\n}\n\nexport default usePotsData;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;AAWA,mBAAoC;AATpC,IAAI,aAAa;AACjB,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EACA;AACA,cAAY,IAAI,eAAe;AAC/B;AASA,IAAM,cAAc,MAAM;AACtB,QAAM,EAAE,KAAK,IAAI,QAAQ;AACzB,QAAM,CAAC,MAAM,OAAO,QAAI,uBAAgB,CAAC,CAAC;AAC1C,QAAM,CAAC,SAAS,UAAU,QAAI,uBAAS,IAAI;AAC3C,QAAM,CAAC,OAAO,QAAQ,QAAI,uBAAwB,IAAI;AAGtD,8BAAU,MAAM;AACZ,UAAM,YAAY,YAAY;AAC1B,UAAI,MAAM;AACN,YAAI;AACA,gBAAM,UAAU,WAAW,IAAI,SAAS,KAAK,UAAU;AACvD,gBAAM,gBAAgB,MAAM,QAAQ,OAAO;AAE3C,gBAAM,WAAkB,CAAC;AACzB,wBAAc,QAAQ,CAAC,QAAQ;AAC3B,qBAAS,KAAK,EAAE,IAAI,IAAI,IAAI,GAAG,IAAI,KAAK,EAAE,CAAQ;AAAA,UACtD,CAAC;AAED,kBAAQ,QAAQ;AAAA,QACpB,QAAE;AACE,mBAAS,0BAA0B;AAAA,QACvC,UAAE;AACE,qBAAW,KAAK;AAAA,QACpB;AAAA,MACJ;AAAA,IACJ;AAEA,cAAU;AAAA,EACd,GAAG,CAAC,IAAI,CAAC;AAGT,8BAAU,MAAM;AACZ,QAAI,CAAC;AAAM;AAEX,UAAM,gBAAgB,WAAW,IAAI,SAAS,KAAK,UAAU;AAE7D,UAAM,cAAc,WAAW,eAAe,CAAC,aAAa;AACxD,YAAM,WAAkB,SAAS,KAAK,IAAI,UAAQ;AAAA,QAC9C,IAAI,IAAI;AAAA,QACR,GAAG,IAAI,KAAK;AAAA,MAChB,EAAE;AAEF,YAAM,aAAa,SAAS,KAAK,CAAC,GAAG,MAAM;AACvC,cAAM,QAAQ,EAAE,UAAU,SAAS;AACnC,cAAM,QAAQ,EAAE,UAAU,SAAS;AACnC,eAAO,QAAQ;AAAA,MACnB,CAAC;AAED,cAAQ,UAAU;AAAA,IACtB,GAAG,CAACA,WAAU;AACV,eAAS,qBAAqB;AAC9B,cAAQ,IAAIA,MAAK;AAAA,IACrB,CAAC;AAGD,WAAO,MAAM,YAAY;AAAA,EAC7B,GAAG,CAAC,IAAI,CAAC;AAGT,QAAM,SAAS,OAAO,WAA4B;AAC9C,QAAI;AACA,YAAM,gBAAgB,WAAW,IAAI,SAAS,MAAM,UAAU;AAC9D,YAAM,SAAS,MAAM,OAAO,eAAe,EAAE,GAAG,QAAQ,QAAQ,MAAM,IAAI,CAAC;AAC3E,YAAM,WAAW,EAAE,IAAI,OAAO,IAAI,GAAG,OAAO;AAC5C,cAAQ,CAAC,YAAY,CAAC,UAAU,GAAG,OAAO,CAAC;AAAA,IAC/C,SAAS,KAAP;AACE,eAAS,kBAAkB;AAC3B,cAAQ,IAAI,GAAG;AAAA,IACnB;AAAA,EACJ;AAEA,SAAO,EAAE,MAAM,SAAS,OAAO,OAAO;AAC1C;AAEA,IAAO,kBAAQ;",
  "names": ["error"]
}
